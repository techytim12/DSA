Maximum Unsorted Subarray

Problem Description
Given an array A of non-negative integers of size N. Find the minimum sub-array Al, Al+1 ,..., Ar such that if we sort(in ascending order) that sub-array, then the whole array should get sorted. If A is already sorted, output -1.

Note :
Follow 0-based indexing, while returning the sub-array's starting and ending indexes.



Problem Constraints
1 <= N <= 106
1 <= A[i] <= 106



Input Format
First and only argument is an array of non-negative integers of size N.



Output Format
Return an array of length two where,
the first element denotes the starting index(0-based) and
the second element denotes the ending index(0-based) of the sub-array.
If the array is already sorted, return an array containing only one element i.e. -1.


Example Input
Input 1:

A = [1, 3, 2, 4, 5]
Input 2:

A = [1, 2, 3, 4, 5]


Example Output
Output 1:

[1, 2]
Output 2:

[-1]


Example Explanation
Explanation 1:

If we sort the sub-array [A1, A2] then the whole array A gets sorted.
Explanation 2:

A is already sorted.


+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
public class Solution {
    public int[] subUnsort(int[] A) {

        int N = A.length;
        if(N==1){
            return new int[]{-1};
        }

        /*
        First we find the start and end with the simple logic by iteratin from
        start & end.
        then find the min & max in that particular subarray
        then iterate again from 0 to start & check if there is any element
        greater than min & iterate from N-1 to end & check if any element 
        smaller than max.
        if there's , update the start & end index values
        */
        int a = 0;
        int b = 0;

        for(int i=0; i<N-1; i++){
            if(A[i] > A[i+1]){
                a = i;
                break;
            }
        }
        for(int i=N-1; i>0; i--){
            if(A[i] < A[i-1]){
                b = i;
                break;
            }
        }

        int min = Integer.MAX_VALUE;
        int max = 0;
        for(int i=a; i<=b; i++){
            min = Math.min(min, A[i]);
            max = Math.max(max, A[i]);
        }

        for(int i=0; i<=a; i++){
            if(A[i]>min){
                a = i;
                break;
            }
        }
        for(int i=N-1; i>=b; i--){
            if(A[i]<max){
                b = i;
                break;
            }
        }

        if(a==0 && b==0){
            return new int[]{-1};
        } else {
            return new int[]{a,b};
        }
    }
}
